{"version":3,"sources":["Components/NavBar.js","Components/Header.js","Components/AddNotes.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","variant","sticky","Brand","Nav","className","Link","href","Button","Header","Jumbotron","fluid","style","backgroundColor","textAlign","randomColor","Math","floor","random","toString","AddNotes","useState","note","setNote","search","setSearch","type","id","name","placeholder","rows","cols","onClick","result","document","getElementById","value","result2","result3","length","date","title","alert","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wQAwBeA,MAlBf,WACE,OACE,8BAGG,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MAAxC,UACH,cAACH,EAAA,EAAOI,MAAR,8BACA,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACE,cAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,qDAAf,oBAEF,cAACC,EAAA,EAAD,CAAQP,QAAQ,eAAeM,KAAK,iCAApC,2B,QCGWE,MAff,WACE,OACE,qBAAKJ,UAAU,SAAf,SAEJ,cAACK,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAACC,gBAAiB,mBAAoBC,UAAU,UAAxE,SAEI,sD,gBCLAC,G,MAAc,IAAIC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,KA4EnDC,MA1Ef,WAAoB,IAAD,EAESC,mBAAS,IAFlB,mBAERC,EAFQ,KAEFC,EAFE,OAGUF,mBAAS,GAHnB,mBAGRG,EAHQ,KAGDC,EAHC,KAiCb,OAEE,8BAEI,iCAEA,uBAAOC,KAAK,OAAOC,GAAG,QAAQC,KAAK,eAEnC,uBAAOF,KAAK,OAAOrB,UAAU,QAAQsB,GAAG,QAAQC,KAAK,QAAQC,YAAY,UAEzE,0BAAUF,GAAG,OAAOtB,UAAU,MAAMyB,KAAK,IAAIC,KAAK,KAAlD,wCAGA,cAACvB,EAAA,EAAD,CAAQP,QAAQ,UAAUI,UAAU,OAAO2B,QAxCnD,WAII,IAAIC,EAAOC,SAASC,eAAe,QAAQC,MACvCC,EAAQH,SAASC,eAAe,SAASC,MACzCE,EAAQJ,SAASC,eAAe,SAASC,MAG7Cb,EAAQ,GAAD,mBAAKD,GAAL,CAAU,CAACK,GAAIL,EAAKiB,OAAOH,MAAMH,EAAQO,KAAKH,EAASI,MAAMH,MAEhEI,MAAM,2BAENjB,EAAUD,EAAO,IA2BjB,kBAEA,uBAEA,uBAEEA,EAAS,GAAK,oBAAGZ,MAAO,CAACE,UAAU,UAArB,iCAAqDU,EAArD,oBAEf,uBAID,qBAAKnB,UAAU,gBAAf,SAhCGiB,EAAKqB,KAAI,SAAArB,GAAI,OAAG,sBAAKjB,UAAU,WAAWO,MAAO,CAACC,gBAAgBE,GAAlD,UAA8E,qBAAIH,MAAO,CAACE,UAAU,UAAtB,UAAkCQ,EAAKmB,MAAvC,OAErG,qBAAI7B,MAAO,CAACE,UAAU,UAAtB,UAAkCQ,EAAKkB,KAAvC,OAAmDlB,EAAKc,QAFoCd,EAAKK,eCb1FiB,MAdf,WACE,OACE,sBAAKvC,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.8aab8811.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div >\r\n      \r\n       \r\n       <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n    <Navbar.Brand>Simple Note App</Navbar.Brand>\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"https://kadeem-caines.github.io/Website-Portfolio/\">Home</Nav.Link>\r\n    </Nav>\r\n    <Button variant=\"outline-info\" href=\"mailto:kadeem.caines@gmail.com\">Contact</Button>\r\n   \r\n  </Navbar>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React, { useState } from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\" >\r\n\r\n<Jumbotron fluid style={{backgroundColor: \"rgb(81, 73, 126)\", textAlign:\"center\"}}>\r\n\r\n    <h1>Simple Note App</h1>\r\n   \r\n</Jumbotron>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, {useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Notes.css';\r\n\r\nvar randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\r\n\r\nfunction AddNotes(){\r\n\r\n    const [note, setNote] = useState([]);\r\n    const [search,setSearch]=useState(0);\r\n\r\n\r\n    function alertNewNoteAdded(){\r\n\r\n        \r\n         \r\n        var result=document.getElementById(\"test\").value;\r\n        var result2=document.getElementById(\"start\").value;\r\n        var result3=document.getElementById(\"fname\").value;\r\n\r\n\r\n        setNote([...note,{id: note.length,value:result, date:result2, title:result3}]);\r\n     \r\n            alert(\"Your Note was submitted\");\r\n\r\n            setSearch(search+1);\r\n     \r\n    }\r\n\r\n    \r\n    function addNewNote(){\r\n\r\n        return note.map(note=>(<div className=\"template\" style={{backgroundColor:randomColor}} key={note.id}><h5 style={{textAlign:\"center\"}}>{note.title}:</h5> \r\n        \r\n        <h5 style={{textAlign:\"center\"}}>{note.date}:</h5>{note.value}</div>))\r\n\r\n   }\r\n    \r\n\r\n      return (\r\n\r\n        <div>\r\n                \r\n            <form>\r\n\r\n            <input type=\"date\" id=\"start\" name=\"trip-start\"></input>\r\n\r\n            <input type=\"text\" className=\"title\" id=\"fname\" name=\"fname\" placeholder=\"Title\"></input>\r\n\r\n            <textarea id=\"test\" className=\"box\" rows=\"4\" cols=\"50\">Your stories start here...</textarea>\r\n\r\n\r\n            <Button variant=\"primary\" className=\"save\" onClick={alertNewNoteAdded}>Save</Button>\r\n            \r\n            <br/>\r\n\r\n            <br/>\r\n            \r\n             {search > 0 && <p style={{textAlign:\"center\"}}> You currently have {search} notes showing</p>}\r\n\r\n             <br/>\r\n\r\n            \r\n            \r\n            <div className=\"noteContainer\">\r\n\r\n             {addNewNote()}\r\n           \r\n            </div>\r\n\r\n            </form>    \r\n\r\n        </div>\r\n        \r\n    );\r\n\r\n   \r\n         \r\n}\r\n\r\nexport default AddNotes;\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport NavBar from './Components/NavBar';\nimport Header from './Components/Header';\nimport AddNotes from './Components/AddNotes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <NavBar />\n      <Header />\n      <AddNotes />\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}